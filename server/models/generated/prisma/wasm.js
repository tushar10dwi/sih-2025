
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  password: 'password',
  otp: 'otp',
  createdAt: 'createdAt',
  hasProfile: 'hasProfile'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  age: 'age',
  sex: 'sex',
  state: 'state',
  district: 'district',
  classLevel: 'classLevel',
  category: 'category'
};

exports.Prisma.SkillScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.InterestScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.PassionScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.SkillOnProfileScalarFieldEnum = {
  profileId: 'profileId',
  skillId: 'skillId'
};

exports.Prisma.InterestOnProfileScalarFieldEnum = {
  profileId: 'profileId',
  interestId: 'interestId'
};

exports.Prisma.PassionOnProfileScalarFieldEnum = {
  profileId: 'profileId',
  passionId: 'passionId'
};

exports.Prisma.AptitudeTestScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  dateTaken: 'dateTaken',
  scores: 'scores',
  total: 'total'
};

exports.Prisma.CollegeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  location: 'location'
};

exports.Prisma.DegreeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  field: 'field'
};

exports.Prisma.DegreeOnCollegeScalarFieldEnum = {
  collegeId: 'collegeId',
  degreeId: 'degreeId'
};

exports.Prisma.CareerScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  description: 'description',
  salary: 'salary'
};

exports.Prisma.InterestOnCareerScalarFieldEnum = {
  careerId: 'careerId',
  interestId: 'interestId'
};

exports.Prisma.SkillOnCareerScalarFieldEnum = {
  careerId: 'careerId',
  skillId: 'skillId'
};

exports.Prisma.CareerOnDegreeScalarFieldEnum = {
  careerId: 'careerId',
  degreeId: 'degreeId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  User: 'User',
  Profile: 'Profile',
  Skill: 'Skill',
  Interest: 'Interest',
  Passion: 'Passion',
  SkillOnProfile: 'SkillOnProfile',
  InterestOnProfile: 'InterestOnProfile',
  PassionOnProfile: 'PassionOnProfile',
  AptitudeTest: 'AptitudeTest',
  College: 'College',
  Degree: 'Degree',
  DegreeOnCollege: 'DegreeOnCollege',
  Career: 'Career',
  InterestOnCareer: 'InterestOnCareer',
  SkillOnCareer: 'SkillOnCareer',
  CareerOnDegree: 'CareerOnDegree'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/tushar_dwi/repos/sih-2025/server/models/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/tushar_dwi/repos/sih-2025/server/models/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id         Int      @id @default(autoincrement())\n  firstName  String\n  lastName   String\n  email      String   @unique\n  password   String?\n  otp        String?\n  createdAt  DateTime @default(now())\n  hasProfile Boolean  @default(false)\n  profile    Profile?\n}\n\nmodel Profile {\n  id     Int  @id @default(autoincrement())\n  userId Int  @unique\n  user   User @relation(fields: [userId], references: [id])\n\n  age        Int?\n  sex        String? // or enum: MALE, FEMALE, OTHER\n  state      String? // location\n  district   String?\n  classLevel String? // 10th, 12th, UG, PG\n  category   String? // General, OBC, SC, ST\n\n  aptitudeTests AptitudeTest[] // <-- Add this line\n\n  // Relations\n  skills    SkillOnProfile[]\n  interests InterestOnProfile[]\n  passions  PassionOnProfile[]\n}\n\nmodel Skill {\n  id      Int              @id @default(autoincrement())\n  name    String           @unique\n  users   SkillOnProfile[]\n  careers SkillOnCareer[] // <-- add this line\n}\n\nmodel Interest {\n  id      Int                 @id @default(autoincrement())\n  name    String              @unique\n  users   InterestOnProfile[]\n  careers InterestOnCareer[]\n}\n\nmodel Passion {\n  id    Int                @id @default(autoincrement())\n  name  String             @unique\n  users PassionOnProfile[]\n}\n\n// Join Tables\n\nmodel SkillOnProfile {\n  profileId Int\n  skillId   Int\n  profile   Profile @relation(fields: [profileId], references: [id])\n  skill     Skill   @relation(fields: [skillId], references: [id])\n\n  @@id([profileId, skillId])\n}\n\nmodel InterestOnProfile {\n  profileId  Int\n  interestId Int\n  profile    Profile  @relation(fields: [profileId], references: [id])\n  interest   Interest @relation(fields: [interestId], references: [id])\n\n  @@id([profileId, interestId])\n}\n\nmodel PassionOnProfile {\n  profileId Int\n  passionId Int\n  profile   Profile @relation(fields: [profileId], references: [id])\n  passion   Passion @relation(fields: [passionId], references: [id])\n\n  @@id([profileId, passionId])\n}\n\nmodel AptitudeTest {\n  id        Int      @id @default(autoincrement())\n  userId    Int\n  user      Profile  @relation(fields: [userId], references: [id])\n  dateTaken DateTime @default(now())\n  scores    Json // {logical: 25, math: 30, verbal: 20}\n  total     Int\n}\n\nmodel College {\n  id       Int               @id @default(autoincrement())\n  name     String\n  location String\n  degrees  DegreeOnCollege[]\n}\n\nmodel Degree {\n  id       Int               @id @default(autoincrement())\n  name     String\n  field    String // Science, Commerce, Arts, Engineering\n  careers  CareerOnDegree[]\n  colleges DegreeOnCollege[]\n}\n\nmodel DegreeOnCollege {\n  collegeId Int\n  degreeId  Int\n  college   College @relation(fields: [collegeId], references: [id])\n  degree    Degree  @relation(fields: [degreeId], references: [id])\n\n  @@id([collegeId, degreeId])\n}\n\nmodel Career {\n  id               Int                @id @default(autoincrement())\n  userId           Int\n  title            String             @unique\n  description      String\n  skillsRequired   SkillOnCareer[]\n  interestRequired InterestOnCareer[]\n  degreesRequired  CareerOnDegree[]\n  salary           Int?\n}\n\nmodel InterestOnCareer {\n  careerId   Int\n  interestId Int\n  career     Career   @relation(fields: [careerId], references: [id])\n  interest   Interest @relation(fields: [interestId], references: [id])\n\n  @@id([careerId, interestId])\n}\n\nmodel SkillOnCareer {\n  careerId Int\n  skillId  Int\n  career   Career @relation(fields: [careerId], references: [id])\n  skill    Skill  @relation(fields: [skillId], references: [id])\n\n  @@id([careerId, skillId])\n}\n\nmodel CareerOnDegree {\n  careerId Int\n  degreeId Int\n  career   Career @relation(fields: [careerId], references: [id])\n  degree   Degree @relation(fields: [degreeId], references: [id])\n\n  @@id([careerId, degreeId])\n}\n",
  "inlineSchemaHash": "e3ee20046ceb7ed3c6aaf87232d0c26915b161b60f565691be5672821c4dd3fe",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"otp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"hasProfile\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToUser\"}],\"dbName\":null},\"Profile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProfileToUser\"},{\"name\":\"age\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sex\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"district\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"classLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aptitudeTests\",\"kind\":\"object\",\"type\":\"AptitudeTest\",\"relationName\":\"AptitudeTestToProfile\"},{\"name\":\"skills\",\"kind\":\"object\",\"type\":\"SkillOnProfile\",\"relationName\":\"ProfileToSkillOnProfile\"},{\"name\":\"interests\",\"kind\":\"object\",\"type\":\"InterestOnProfile\",\"relationName\":\"InterestOnProfileToProfile\"},{\"name\":\"passions\",\"kind\":\"object\",\"type\":\"PassionOnProfile\",\"relationName\":\"PassionOnProfileToProfile\"}],\"dbName\":null},\"Skill\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"SkillOnProfile\",\"relationName\":\"SkillToSkillOnProfile\"},{\"name\":\"careers\",\"kind\":\"object\",\"type\":\"SkillOnCareer\",\"relationName\":\"SkillToSkillOnCareer\"}],\"dbName\":null},\"Interest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"InterestOnProfile\",\"relationName\":\"InterestToInterestOnProfile\"},{\"name\":\"careers\",\"kind\":\"object\",\"type\":\"InterestOnCareer\",\"relationName\":\"InterestToInterestOnCareer\"}],\"dbName\":null},\"Passion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"PassionOnProfile\",\"relationName\":\"PassionToPassionOnProfile\"}],\"dbName\":null},\"SkillOnProfile\":{\"fields\":[{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"skillId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToSkillOnProfile\"},{\"name\":\"skill\",\"kind\":\"object\",\"type\":\"Skill\",\"relationName\":\"SkillToSkillOnProfile\"}],\"dbName\":null},\"InterestOnProfile\":{\"fields\":[{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"interestId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"InterestOnProfileToProfile\"},{\"name\":\"interest\",\"kind\":\"object\",\"type\":\"Interest\",\"relationName\":\"InterestToInterestOnProfile\"}],\"dbName\":null},\"PassionOnProfile\":{\"fields\":[{\"name\":\"profileId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"passionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"PassionOnProfileToProfile\"},{\"name\":\"passion\",\"kind\":\"object\",\"type\":\"Passion\",\"relationName\":\"PassionToPassionOnProfile\"}],\"dbName\":null},\"AptitudeTest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"AptitudeTestToProfile\"},{\"name\":\"dateTaken\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scores\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"College\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"degrees\",\"kind\":\"object\",\"type\":\"DegreeOnCollege\",\"relationName\":\"CollegeToDegreeOnCollege\"}],\"dbName\":null},\"Degree\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"field\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"careers\",\"kind\":\"object\",\"type\":\"CareerOnDegree\",\"relationName\":\"CareerOnDegreeToDegree\"},{\"name\":\"colleges\",\"kind\":\"object\",\"type\":\"DegreeOnCollege\",\"relationName\":\"DegreeToDegreeOnCollege\"}],\"dbName\":null},\"DegreeOnCollege\":{\"fields\":[{\"name\":\"collegeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"degreeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"college\",\"kind\":\"object\",\"type\":\"College\",\"relationName\":\"CollegeToDegreeOnCollege\"},{\"name\":\"degree\",\"kind\":\"object\",\"type\":\"Degree\",\"relationName\":\"DegreeToDegreeOnCollege\"}],\"dbName\":null},\"Career\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skillsRequired\",\"kind\":\"object\",\"type\":\"SkillOnCareer\",\"relationName\":\"CareerToSkillOnCareer\"},{\"name\":\"interestRequired\",\"kind\":\"object\",\"type\":\"InterestOnCareer\",\"relationName\":\"CareerToInterestOnCareer\"},{\"name\":\"degreesRequired\",\"kind\":\"object\",\"type\":\"CareerOnDegree\",\"relationName\":\"CareerToCareerOnDegree\"},{\"name\":\"salary\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"InterestOnCareer\":{\"fields\":[{\"name\":\"careerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"interestId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"career\",\"kind\":\"object\",\"type\":\"Career\",\"relationName\":\"CareerToInterestOnCareer\"},{\"name\":\"interest\",\"kind\":\"object\",\"type\":\"Interest\",\"relationName\":\"InterestToInterestOnCareer\"}],\"dbName\":null},\"SkillOnCareer\":{\"fields\":[{\"name\":\"careerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"skillId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"career\",\"kind\":\"object\",\"type\":\"Career\",\"relationName\":\"CareerToSkillOnCareer\"},{\"name\":\"skill\",\"kind\":\"object\",\"type\":\"Skill\",\"relationName\":\"SkillToSkillOnCareer\"}],\"dbName\":null},\"CareerOnDegree\":{\"fields\":[{\"name\":\"careerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"degreeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"career\",\"kind\":\"object\",\"type\":\"Career\",\"relationName\":\"CareerToCareerOnDegree\"},{\"name\":\"degree\",\"kind\":\"object\",\"type\":\"Degree\",\"relationName\":\"CareerOnDegreeToDegree\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

